name: Build source package and wheels

on:
  workflow_call:
    inputs:
      github-ref-name:
        required: true
        type: string

jobs:
  build-source:
    name: Build source package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update version in pyproject.toml and setup.py from current git tag
        run: |
          sed -i "s/0\\.0\\.0\\.dev0/${{ inputs.github-ref-name }}/g" pyproject.toml
          sed -i "s/0\\.0\\.0\\.dev0/${{ inputs.github-ref-name }}/g" setup.py

      - uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Build package
        run: |
          pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: source
          path: ./dist

  build-linux:
    name: Build Linux wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - "manylinux2014_x86_64"
          - "musllinux_1_1_x86_64"
          - "manylinux2014_aarch64"
          - "musllinux_1_1_aarch64"
          - "musllinux_1_2_armv7l"
        folder:
          - "cp36-cp36m"
          - "cp37-cp37m"
          - "cp38-cp38"
          - "cp39-cp39"
          - "cp310-cp310"
          - "cp311-cp311"
          - "cp312-cp312"
          - "cp313-cp313"

    steps:
      - uses: actions/checkout@v4

      - name: Update version in pyproject.toml and setup.py from current git tag
        run: |
          sed -i "s/0\\.0\\.0\\.dev0/${{ inputs.github-ref-name }}/g" pyproject.toml
          sed -i "s/0\\.0\\.0\\.dev0/${{ inputs.github-ref-name }}/g" setup.py

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,arm

      - name: Build packages
        run: >-
          docker run --rm -v ${{ github.workspace }}:/app quay.io/pypa/${{ matrix.image }} bash -c '
            cd /app &&
            /opt/python/${{ matrix.folder }}/bin/python -m build --wheel
            auditwheel repair $(ls dist/*.whl) &&
            rm dist/*.whl &&
            cp wheelhouse/*.whl dist
          '

      - uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.image }}-$${{ matrix.folder }}
          path: ./dist

  build-macos:
    name: Build macOS wheels
    strategy:
      matrix:
        os:
          - "macos-12"
          - "macos-13"
          - "macos-14"  # ARM
        python-version:
          - "3.6.7"
          - "3.7.1"
          - "3.8.10"
          - "3.9.13"
          - "3.10.11"
          - "3.11.9"
          - "3.12.6"
          - "3.13.0"
        exclude:
          - python-version: "3.6.7"
            os: "macos-14"
          - python-version: "3.7.1"
            os: "macos-14"
    runs-on: '${{ matrix.os }}'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'

      - name: Update version in pyproject.toml and setup.py from current git tag
        run: |
          sed -i "" "s/0\\.0\\.0\\.dev0/${{ inputs.github-ref-name }}/g" pyproject.toml
          sed -i "" "s/0\\.0\\.0\\.dev0/${{ inputs.github-ref-name }}/g" setup.py

      - name: Build package
        run: |
          pip install build
          python -m build --wheel

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}
          path: ./dist

  build-ios:
    name: Build iOS wheels
    runs-on: 'macos-14'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5

      - name: Update version in pyproject.toml and setup.py from current git tag
        run: |
          sed -i "" "s/0\\.0\\.0\\.dev0/${{ inputs.github-ref-name }}/g" pyproject.toml
          sed -i "" "s/0\\.0\\.0\\.dev0/${{ inputs.github-ref-name }}/g" setup.py

      - name: Install cibuildwheel
        # iOS support not yet released to PyPI
        run: python -m pip install git+https://github.com/pypa/cibuildwheel.git@e91560e8a14470ff35488e414aa7aa1de5aec2d8

      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_PLATFORM: 'ios'
          CIBW_ARCHS: 'all'
          CIBW_BUILD: 'cp*'
      - uses: actions/upload-artifact@v4
        with:
          name: ios
          path: ./dist

  build-windows:
    name: Build Windows wheels
    strategy:
      matrix:
        os:
          - "windows-2019"
        python-version:
          - "3.6.7"
          - "3.7.1"
          - "3.8.0"
          - "3.9.0"
          - "3.10.0"
          - "3.11.0"
          - "3.12.0"
          - "3.13.0"
    runs-on: '${{ matrix.os }}'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'

      - name: Update version in pyproject.toml and setup.py from current git tag
        run: |
          (Get-Content pyproject.toml).Replace('0.0.0.dev0', '${{ inputs.github-ref-name }}') | Set-Content pyproject.toml
          (Get-Content setup.py).Replace('0.0.0.dev0', '${{ inputs.github-ref-name }}') | Set-Content setup.py

      - name: Build package
        run: |
          pip install build
          python -m build --wheel

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}
          path: ./dist
